name: Angular Front CI/CD

on:
  pull_request:
    branches: [main]
  push:
    branches: [dev]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x] # the two LTS releases which are not reaching EOL
      fail-fast: false # This prevents other jobs from being canceled if one fails

    defaults:
      run:
        working-directory: "./front"

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: "./front/package-lock.json"

      - name: Install dependencies
        run: npm ci

      - name: Run Angular tests
        run: npm run test:ci

      - name: Generate Angular Coverage
        run: npm run coverage:ci

      - name: Upload Coverage Artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ matrix.node-version }}
          path: ./front/coverage/bobapp/lcov-report

      - name: Build Angular Frontend
        run: npm run build --prod

      - name: SonarCloud Front-end Scan
        if: ${{ matrix.node-version == '20.x' }}
        uses: sonarsource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONT }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
        with:
          args: >
            -Dsonar.projectKey=ask0ldd_schoolwork-cicd-refresh-front
            -Dsonar.organization=ask0ldd
            -Dsonar.sources=./front/src
            -Dsonar.javascript.lcov.reportPaths=./front/coverage/bobapp/lcov.info
            -Dsonar.exclusions=front/.angular/**,front/node_modules/**,front/coverage/**,front/src/environments/**,.git,.github,back/**,**/*.spec.ts,**/*.conf.js,front/src/test.ts,front/src/main.ts

      - name: Docker Login
        if: ${{ matrix.node-version == '20.x' }}
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
        run: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_TOKEN

      - name: Build & Push Docker Image
        if: ${{ matrix.node-version == '20.x' }}
        # working-directory: ./front
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          docker build -t $DOCKER_USERNAME/bobappfront:latest .
          docker push $DOCKER_USERNAME/bobappfront:latest
